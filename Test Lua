-- TriggerBot by ChatGPT x Xeno compatible
-- Usage: C pour activer/désactiver - Ctrl pour ouvrir/fermer menu

-- Sécurité et chargement
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

repeat wait() until player and player.Character and player:FindFirstChild("PlayerGui")

-- Variables
local triggerEnabled = false
local triggerDelay = 0.05
local pingPrediction = 0.06
local menuVisible = true

-- Création du GUI dans CoreGui (compatibilité Xeno)
local gui = Instance.new("ScreenGui")
gui.Name = "TriggerBotMenu"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = game:GetService("CoreGui")

-- Cadre principal
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 280, 0, 160)
frame.Position = UDim2.new(0.5, -140, 0.5, -80)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundTransparency = 1
title.Text = "TriggerBot Da Hood Style"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 18

local status = Instance.new("TextLabel", frame)
status.Position = UDim2.new(0, 0, 0, 40)
status.Size = UDim2.new(1, 0, 0, 40)
status.BackgroundTransparency = 1
status.Text = "Status: OFF (press C)"
status.TextColor3 = Color3.new(1, 1, 1)
status.Font = Enum.Font.Gotham
status.TextSize = 16

-- Toggle menu (Ctrl)
UIS.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.LeftControl then
		menuVisible = not menuVisible
		frame.Visible = menuVisible
	end
end)

-- Toggle TriggerBot (C)
UIS.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.C then
		triggerEnabled = not triggerEnabled
		status.Text = "Status: " .. (triggerEnabled and "ON" or "OFF") .. " (press C)"
	end
end)

-- Fonction prédiction simple
local function predict(root)
	if not root then return nil end
	return root.Position + (root.Velocity * pingPrediction)
end

-- Détection de joueur visé
local function getTarget()
	local mouse = player:GetMouse()
	local part = mouse.Target
	if not part then return nil end
	local model = part:FindFirstAncestorOfClass("Model")
	if not model then return nil end
	local humanoid = model:FindFirstChildWhichIsA("Humanoid")
	local root = model:FindFirstChild("HumanoidRootPart")
	if humanoid and humanoid.Health > 0 and root and Players:GetPlayerFromCharacter(model) ~= player then
		return root
	end
	return nil
end

-- Arme
local function fire()
	local char = player.Character
	if not char then return end
	local tool = char:FindFirstChildOfClass("Tool")
	if tool and tool:FindFirstChild("Activate") then
		tool:Activate()
	end
end

-- Loop principal
RunService.RenderStepped:Connect(function()
	if not triggerEnabled then return end
	local target = getTarget()
	if target then
		local cam = workspace.CurrentCamera
		local predicted = predict(target)
		if predicted then
			cam.CFrame = CFrame.new(cam.CFrame.Position, predicted)
			task.wait(triggerDelay)
			if getTarget() then
				fire()
			end
		end
	end
end)
